# Deploy to Azure Kubernetes Service

trigger:
- none

resources:
- repo: self

variables:
  imagePullSecret: 'ips_(prod)_$(lang)$_(branch)_$(commitHash)'
  k8sServConn: 'MKTFEK8s'
  acrServConn: 'MKTFEACR'
  acrUrl: 'mktfeacr.azurecr.io'

pool:
  vmImage: 'ubuntu-latest'
  environment: $(branch)

steps:
- task: KubernetesManifest@0
  displayName: Create imagePullSecret
  inputs:
    action: createSecret
    kubernetesServiceConnection: $(k8sServConn)
    namespace: 'default'
    secretType: 'dockerRegistry'
    secretName: $(imagePullSecret)
    dockerRegistryEndpoint: $(acrServConn)

- task: KubernetesManifest@0
  displayName: Deploy to Kubernetes cluster
  inputs:
    action: deploy
    kubernetesServiceConnection: $(k8sServConn)
    namespace: 'default'
    manifests: |
      htmlDeploy/$(prod)/k8s-deploy-$(lang)-$(branch).yaml
    imagePullSecrets: |
      $(imagePullSecret)
    #note the containers should be full url(mktfeacr.azurecr.io), can not replace to 'MKTFEACR'(service connection) which will not replace the image source in k8s.yaml
    containers: |
      $(acrUrl)/$(prod)-$(lang):$(branch).$(commitHash).$(buildNumber)

- task: Kubernetes@1
  displayName: Wait until Job has finished
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(k8sServConn)
    namespace: 'default'
    command: 'wait'
    arguments: '--for=condition=complete job/html-deploy-$(prod)-$(lang)-$(branch) --timeout=120s'

- task: Kubernetes@1
  displayName: Delete completed job
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: $(k8sServConn)
    namespace: 'default'
    command: 'delete'
    arguments: 'job html-deploy-$(prod)-$(lang)-$(branch)'
